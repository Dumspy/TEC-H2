@page "/Profile/{ProfileId:int?}"
@using DatingApp.Data.Models
@using DatingApp.Services
@rendermode InteractiveServer 
@inject AuthService AuthService
@inject ProfileService ProfileService

<AuthedView ReturnAfterAuth="true">
    @if(ProfileId == null)
    {
        @if (_ownProfile)
        {
            <h1>Your Profile Hasn't been setup yet</h1>
            <button class="bg-blue-500 text-white py-1.5 px-1 rounded border">Get started</button>
        }
        else
        {
            <h1>Profile not found</h1>
        }
    }
    else
    {
        <h1>Profile with ID: @ProfileId</h1>
    }
</AuthedView>

@code {
    [Parameter] 
    public int? ProfileId { get; set; } = null;
    
    private UserProfile? _profile = null;
    private bool _ownProfile = false;

    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);

        if (!firstRender || !AuthService.IsLoggedIn) return;
        
        if (ProfileId == null)
        {
            _profile = ProfileService.GetProfileByUserId(AuthService.CurrentUser.Id);
            ProfileId = _profile?.Id;
            _ownProfile = true;
            Console.WriteLine("Own profile");
            StateHasChanged();
            
            return;
        }
        
        StateHasChanged();  
        _profile = ProfileService.GetProfileById(ProfileId.Value); 
    }

}